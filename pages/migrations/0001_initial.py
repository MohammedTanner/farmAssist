# Generated by Django 4.1.7 on 2023-03-28 07:23

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('waterreq', models.TextField(blank=True, db_column='waterReq', null=True)),
                ('lightingreq', models.TextField(blank=True, db_column='lightingReq', null=True)),
                ('spacereq', models.TextField(blank=True, db_column='spaceReq', null=True)),
            ],
            options={
                'db_table': 'crop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HumidityReading',
            fields=[
                ('time', models.DateTimeField(primary_key=True, serialize=False)),
                ('location', models.IntegerField()),
                ('reading', models.IntegerField()),
            ],
            options={
                'db_table': 'humidity_reading',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LightingReading',
            fields=[
                ('time', models.DateTimeField(primary_key=True, serialize=False)),
                ('location', models.IntegerField()),
                ('reading', models.IntegerField()),
            ],
            options={
                'db_table': 'lighting_reading',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Meetup',
            fields=[
                ('postid', models.AutoField(db_column='postID', primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=255)),
                ('starttime', models.DateTimeField(db_column='startTime')),
                ('endtime', models.DateTimeField(blank=True, db_column='endTime', null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meetup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoistureReading',
            fields=[
                ('time', models.DateTimeField(primary_key=True, serialize=False)),
                ('location', models.IntegerField()),
                ('reading', models.IntegerField()),
            ],
            options={
                'db_table': 'moisture_reading',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productid', models.AutoField(db_column='productID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCrop',
            fields=[
                ('cropid', models.AutoField(db_column='cropID', primary_key=True, serialize=False)),
                ('location', models.IntegerField()),
                ('plantdate', models.DateField(db_column='plantDate')),
                ('harvestdate', models.DateField(db_column='harvestDate')),
            ],
            options={
                'db_table': 'product_crop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TankReading',
            fields=[
                ('time', models.DateTimeField(primary_key=True, serialize=False)),
                ('reading', models.IntegerField()),
            ],
            options={
                'db_table': 'tank_reading',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TemperatureReading',
            fields=[
                ('time', models.DateTimeField(primary_key=True, serialize=False)),
                ('reading', models.IntegerField()),
            ],
            options={
                'db_table': 'temperature_reading',
                'managed': False,
            },
        ),
    ]
